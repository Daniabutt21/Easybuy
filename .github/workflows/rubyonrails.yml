# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI/CD"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
 test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
      - uses: actions/checkout@v3
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: Setup Yarn
      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install
      - name: Build and run test
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rake db:create
          bundle exec rake db:migrate
          bundle exec rspec .

 lint:
    runs-on: ubuntu-latest
    steps:
      - name: Security audit dependencies
        run: bundle exec bundle audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
